{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderReader","leader","Media","tag","key","left","middle","object","body","heading","designation","description","About","leaders","in","CardHeader","CardBody","title","list","CommentForm","onChange","e","target","value","setState","disabled","state","toggleModel","modalOpen","submitHandle","postComment","dishId","rating","author","comment","label","Fragment","Modal","isOpen","toggle","ModalHeader","ModalBody","style","Object","assign","styles","button","buttonEnabled","RenderDish","transformProps","exitTransform","top","CardText","RenderComments","comments","dishcomment","Intl","DateTimeFormat","year","month","day","format","Date","date","input","outline","fontSize","padding","border","backgroundColor","marginTop","height","borderRadius","cursor","transition","DishDetail","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","Footer","RenderCard","item","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leadersLoading","leadersErrMess","addFeedback","feedback","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ba72a97.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-2x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = \"http://localhost:3001/\";\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }){\r\n  return(\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardImgOverlay>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.dishes.map((dish) => {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n          <RenderMenuItem dish={dish} />\r\n      </div>\r\n    );\r\n  });\r\n  if (props.dishes.isLoading) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n  else if (props.dishes.errMess) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\"> \r\n                <div className=\"col-12\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n  else\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className='col-12'>\r\n            <h3>Menu</h3>\r\n            <hr/>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">{menu}</div>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react';\r\nimport {Breadcrumb,BreadcrumbItem,Button,Row,Label,Col} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Errors, Control} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n    \r\n    handleSubmit(values){\r\n        // console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(\r\n          values.firstname,\r\n          values.lastname,\r\n          values.telnum,\r\n          values.email,\r\n          values.agree,\r\n          values.contactType,\r\n          values.message\r\n        );\r\n        // values.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                         <h3>Contact Us</h3>\r\n                         <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\"> \r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com/en/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form  model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor='firstname' md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                     placeholder=\"First Name\" \r\n                                     className=\"form-control\"\r\n                                     validators={{\r\n                                         required, minLength:minLength(3), maxLength: maxLength(15)\r\n                                     }}\r\n                                     />\r\n                                     <Errors   className=\"text-danger font-italic\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                             messages={{\r\n                                                required: \"Required* \",\r\n                                                minLength: \"(Must be greater than 2 characters)\",\r\n                                                maxLength: \"(Must be greater than 15 characters)\"\r\n                                            }}\r\n                                           \r\n                                    ></Errors>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'> \r\n                                <Label htmlFor='lastname' md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength:minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                    <Errors   className=\"text-danger font-italic\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                             messages={{\r\n                                                required: \"Required* \",\r\n                                                minLength: \"(Must be greater than 2 characters)\",\r\n                                                maxLength: \"(Must be greater than 15 characters)\"\r\n                                            }}\r\n                                           \r\n                                    ></Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor='telnum' md={2}>Contact Tel</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength:minLength(10), maxLength: maxLength(11), isNumber\r\n                                    }}\r\n                                    />\r\n                                    <Errors   className=\"text-danger font-italic\"\r\n                                            model=\".telnum\"\r\n                                            show=\"touched\"\r\n                                             messages={{\r\n                                                required: \"Required* \",\r\n                                                minLength: \"(Numbers should be minimum of 10 characters )\",\r\n                                                maxLength: \"(Numbers should be maximum of 11 characters)\",\r\n                                                isNumber: \"(Must contain numbers only)\"\r\n                                            }}\r\n                                           \r\n                                    ></Errors>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor='email' md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email Id\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }} \r\n                                    />\r\n                                     <Errors   className=\"text-danger font-italic\"\r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                             messages={{\r\n                                                required: \"Required* \",\r\n                                                 validEmail: \"Invalid Email Address\"\r\n                                            }}\r\n                                           \r\n                                    ></Errors>\r\n \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{size:6 ,offset:2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                            className=\"form-check-input\"\r\n                                            />\r\n                                            {' '}<strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3 ,offset:1}}>\r\n                                    <Control.select model=\".contactType\"\r\n                                     className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor='feedback' md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                    rows=\"12\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nfunction RenderReader({leader}){\r\nreturn(\r\n    <Media tag='li' key={leader.id}>\r\n        <Media left middle>\r\n            <Media object src={baseUrl + leader.image} alt={leader.name}/>\r\n        </Media>\r\n        <Media body className='ml-5'>\r\n            <Media heading>{leader.name}</Media>\r\n            <p>{leader.designation}</p>\r\n            <p>{leader.description}</p>\r\n        </Media>\r\n    </Media>\r\n)\r\n}\r\nfunction About(props) {\r\n    \r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n            <div key={leader.id}>\r\n                 <RenderReader leader={leader}/>\r\n            </div>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React,{Component} from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,BreadcrumbItem,Button,Row,Label,Col,Modal,ModalBody,ModalHeader,\r\n} from \"reactstrap\";\r\nimport {Link } from 'react-router-dom';\r\nimport {LocalForm, Errors, Control} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n \r\n\r\nconst required =(val) =>val&&val.length;\r\nconst maxLength = (len)=>(val)=>!(val)||(val.length<=len)\r\nconst minLength = (len)=>(val)=>(val)&&(val.length>=len)\r\n\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            modalOpen:false,\r\n            disabled: true,\r\n        }\r\n        this.toggleModel=this.toggleModel.bind(this);\r\n        this.submitHandle=this.submitHandle.bind(this);\r\n    }\r\n    onChange = (e) => {\r\n      const comment = e.target.value.length;\r\n      if (comment >= 3) {\r\n        this.setState(() => ({ disabled: false }))\r\n      } else if (!this.state.disabled) {\r\n        this.setState(() => ({ disabled: true }))\r\n      }\r\n    }\r\n    toggleModel=()=>\r\n    {\r\n        this.setState(\r\n            {\r\n                modalOpen:!this.state.modalOpen\r\n            }\r\n        )\r\n    }\r\n\r\n    submitHandle=(values)=>\r\n    {\r\n        this.toggleModel();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    render() { \r\n      const label = this.state.disabled ? 'Disabled' : 'Submit';\r\n        return ( \r\n          <React.Fragment>\r\n            <Button className=\"bg-white text-dark\" onClick={this.toggleModel}><i className=\"fa fa-pencil fa-lg\"></i>{' '}Submit Comment</Button>\r\n            <Modal isOpen={this.state.modalOpen} toggle={this.toggleModel}>\r\n              <ModalHeader toggle={this.toggleModel}>Submit Comment</ModalHeader>\r\n              <ModalBody>\r\n                <LocalForm onSubmit={(values)=>this.submitHandle(values)}>\r\n                  <Row className=\"form-group\" >\r\n                    <Label htmlFor=\"rating\" md={4}>Rating</Label>\r\n                    <Col md={12}>\r\n                      <Control.select model=\".rating\" id=\"rating\" name=\"rating\" placeholder=\"username\" className=\"form-control\">\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                        <option>4</option>\r\n                        <option>5</option>\r\n                      </Control.select>\r\n                    </Col> \r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"author\" md={4}>Your Name</Label>\r\n                    <Col md={12}>\r\n                      <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\"\r\n                      className=\"form-control\"\r\n                      validators={\r\n                        { required, \r\n                          minLength:minLength(4),\r\n                          maxLength:maxLength(15)\r\n                        }\r\n                      }\r\n                      />\r\n                       <Errors   className=\"text-danger font-italic\"\r\n                          model=\".author\"\r\n                          show=\"touched\"\r\n                          messages={{\r\n                            minLength: \"Must be greater than 2 characters\",\r\n                            maxLength: \"Must be 15 characters or less\"\r\n                          }}\r\n                        >\r\n                        </Errors>\r\n                    </Col>\r\n                   \r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"comment\" md={4}>Comment</Label>\r\n                    <Col md={12}>\r\n                      <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required\r\n                       }}\r\n                       rows=\"6\"\r\n                       onChange={this.onChange}/>\r\n                      <Errors   className=\"text-danger font-italic\"\r\n                          model=\".comment\"\r\n                          show=\"touched\"\r\n                          messages={{\r\n                            required:'Comment Required'\r\n                         }}\r\n                      >\r\n                      </Errors>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                    <Col>\r\n                      <Button style={Object.assign({}, styles.button, !this.state.disabled && \r\n                        styles.buttonEnabled)} disabled={this.state.disabled} >\r\n                        {label}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </LocalForm>\r\n              </ModalBody>\r\n            </Modal>\r\n          </React.Fragment>     \r\n      );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n   \r\n      return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n              <CardImg top src={ baseUrl + dish.image} alt={dish.name} />\r\n              <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n              </CardBody>\r\n            </Card>\r\n            </FadeTransform>          \r\n        </div>\r\n      );\r\n    \r\n}\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n  const dishcomment = comments.map((comment) => {\r\n    return (\r\n      <Fade in>\r\n      <ul className=\"list-unstyled\" key={comment.id}>\r\n          <p>{comment.comment}</p>\r\n          <p>\r\n            -- {comment.author}, &nbsp;\r\n            {new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"2-digit\",\r\n            }).format(new Date(comment.date))}\r\n          </p>\r\n        </ul>\r\n      </Fade>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4>Comments</h4>\r\n        <div>\r\n          <Stagger in>\r\n            {dishcomment}\r\n          </Stagger>\r\n        </div>\r\n        <CommentForm  dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  }\r\n  const DishDetail = (props) => {\r\n    if(props.isLoading){\r\n      return(\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading/>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else if(props.errMess){\r\n      return(\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <h4>{props.errMess}</h4>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else if (props.dish != null)\r\n      return (\r\n        <div className=\"container\">\r\n           <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className='col-12'>\r\n              <h3>{props.dish.name}</h3>\r\n              <hr/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <RenderDish dish = {props.dish}/>\r\n            <RenderComments comments = {props.comments}\r\n              postComment={props.postComment}\r\n              dishId={props.dish.id}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    else\r\n      return(\r\n        <div></div>\r\n      );\r\n   \r\n  }\r\n\r\n  const styles = {\r\n    input: {\r\n      width: 200,\r\n      outline: 'none',\r\n      fontSize: 20,\r\n      padding: 10,\r\n      border: 'none',\r\n      backgroundColor: '#ddd',\r\n      marginTop: 10,\r\n    },\r\n    button: {\r\n      width: 180,\r\n      height: 50,\r\n      border: 'none',\r\n      borderRadius: 4,\r\n      fontSize: 20,\r\n      cursor: 'pointer',\r\n      transition: '.25s all',\r\n    },\r\n    buttonEnabled: {\r\n      backgroundColor: '#07a4ff',\r\n      width: 220,\r\n    }\r\n  }\r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport { Nav,Navbar, NavbarBrand, Collapse, NavItem, Jumbotron, NavbarToggler, Button,Modal,ModalBody,ModalHeader, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isNavOpen:false,\r\n            isModalOpen:false,\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin= this.handleLogin.bind(this);\r\n    }\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen:!this.state.isNavOpen\r\n        })\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    } \r\n    render(){\r\n        return(\r\n            <>\r\n                <Navbar dark expand='md'>\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav}/>\r\n                    <NavbarBrand className='mr-auto' href=\"/\">\r\n                        <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristornat Con Fusion'/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className='nav-link' to='/home'>\r\n                                <span className='fa fa-home fa-lg'></span>Home\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className='nav-link' to='/aboutus'>\r\n                                <span className='fa fa-info fa-lg'></span>About Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className='nav-link' to='/menu'>\r\n                                <span className='fa fa-list fa-lg'></span>Menu\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className='nav-link' to='/contactus'>\r\n                                <span className='fa fa-address-card fa-lg'></span>Contact Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </Collapse>\r\n                </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className='container'>\r\n                        <div className='row row-header'>\r\n                            <div className='col-12 col-sm-6'>\r\n                                <h1>Ristornat Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader  toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"rememer\"\r\n                                    innerRef={(input) => this.remember = input}/>Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                \r\n               \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home' href=\"#\">Home</Link></li>\r\n                        <li><Link to='/aboutus' href=\"#\">About</Link></li>\r\n                        <li><Link to='/menu' href=\"#\">Menu</Link></li>\r\n                        <li><Link to='/contactus' href=\"contactus.html\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Card,CardBody,CardImg,CardText,CardTitle,CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if(errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name}/>\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation? <CardSubtitle>{ item.designation} </CardSubtitle>: null}\r\n                    <CardText>{item.description} </CardText>\r\n                </CardBody>\r\n            </Card>  \r\n            </FadeTransform>\r\n        );\r\n}\r\nfunction Home(props){\r\n    return(\r\n        <div className='container'>\r\n            <div className='row align-items-start'>\r\n                <div className='col-12 col-md m-1'>\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className='col-12 col-md m-1'>\r\n                    <RenderCard item={props.promotion} \r\n                    isLoading={props.promosLoading} \r\n                    errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className='col-12 col-md m-1'>\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leadersLoading} \r\n                    errMess={props.leadersErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment=(comment) =>({\r\n    type:ActionTypes.ADD_COMMENT,\r\n    payload:comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) =>(dispatch) =>{\r\n    const newComment = {\r\n        dishId:dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date  = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments' , {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },\r\n    error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>{ console.log('post comments', error.message); \r\n    alert('Your comment could not be posted\\nError: '+error.message); });\r\n}\r\n\r\nexport const postFeedback= (firstname, lastname, telnum, email, agree, contactType, message ) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message,\r\n    }\r\n    return fetch(baseUrl + 'feedback', {\r\n        method:'POST',\r\n        body:JSON.stringify(newFeedback),\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },\r\n    error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response=>response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error =>{ console.log('post feedback', error.message); \r\n    alert('Your feedback could not be posted\\nError: '+error.message); });\r\n}\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n//it is thunk \r\nexport const fetchDishes = () =>(dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes))) \r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type:ActionTypes.DISHES_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type:ActionTypes.ADD_DISHES,\r\n    payload:dishes\r\n});\r\n\r\nexport const fetchComments = () =>(dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () =>(dispatch) => {\r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type:ActionTypes.PROMOS_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type:ActionTypes.ADD_PROMOS,\r\n    payload:promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () =>(dispatch) => {\r\n    dispatch(leadersLoading());\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addLeaders(promos)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type:ActionTypes.LEADERS_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type:ActionTypes.ADD_LEADERS,\r\n    payload:leaders\r\n});","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\nexport const ADD_FEEDBACK = \"ADD_FEEDBACK\";","import React, { Component } from \"react\";\r\nimport Menu from \"./MenuComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from './AboutComponent';\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport {postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders,postFeedback} from '../redux/ActionCreators';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport {actions} from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n const mapDispatchToProps = (dispatch) => ({\r\n   postComment: (dishId, rating, author, comment) => (dispatch(postComment(dishId, rating, author, comment))),\r\n   fetchDishes: () =>{dispatch(fetchDishes())},\r\n   resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n   fetchComments: () =>{dispatch(fetchComments())},\r\n   fetchPromos: () =>{dispatch(fetchPromos())},\r\n   fetchLeaders: () =>{dispatch(fetchLeaders())},\r\n   postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)))\r\n })\r\n \r\nclass Main extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n      <Home  dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n      dishesLoading ={this.props.dishes.isLoading}\r\n      dishesErrMess = { this.props.dishes.errMess}\r\n      promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n      promosLoading={this.props.promotions.isLoading}\r\n      promosErrMess={this.props.promotions.errMess}\r\n      leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n      leadersLoading={this.props.leaders.isLoading}\r\n      leadersErrMess={this.props.leaders.errMess}\r\n      />\r\n      )\r\n    }\r\n    \r\n    const DishWithId = ({match})=> {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish)=> dish.id === parseInt(match.params.dishId,10))[0]} \r\n        isLoading ={this.props.dishes.isLoading}\r\n        errMess = { this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment)=> comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess = { this.props.comments.errMess}\r\n        postComment = {this.props.postComment }\r\n        /> \r\n      );\r\n \r\n    }\r\n   \r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={3000}>\r\n            <Switch>\r\n              <Route path='/home' component={HomePage}/>\r\n              <Route exact path='/menu' component={()=> <Menu dishes={this.props.dishes}/>}/>\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n              postFeedback={this.props.postFeedback}/>} />\r\n              <Route exact path='/aboutus' component={()=> <About leaders={this.props.leaders}/>} />\r\n              <Redirect to='/home'/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//connect  Main component to redux \r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));  \r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes =(state={\r\n    isLoading:true,\r\n    errMess:null,\r\n    dishes:[]\r\n}, action) =>{\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading:false, errMess:null, dishes:action.payload }\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading:true, errMess:null, dishes:[] }\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading:false, errMess:action.payload, dishes:[] }\r\n        default:\r\n            return state;\r\n    }\r\n} ","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments =(state = {\r\n    errMess:null,\r\n    comments:[]\r\n}, action) =>{\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading:false, errMess:null, comments:action.payload }\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading:false, errMess:action.payload, comments:[] }\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments:state.comments.concat(comment)}\r\n        default:\r\n            return state;\r\n    }\r\n} ","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions =(state = {\r\n    errMess:null,\r\n    isLoading:true,\r\n    promotions:[]\r\n}, action) =>{\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading:false, errMess:null, promotions:action.payload }\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading:true, errMess:null, promotions:[] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading:false, errMess:action.payload, promotions:[] }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\n// import * as ActionTypes from './ActionTypes';\r\n\r\n// export const Promotions = (state  = { isLoading: true,\r\n//                                         errMess: null,\r\n//                                         promotions:[]}, action) => {\r\n//     switch (action.type) {\r\n//         case ActionTypes.ADD_PROMOS:\r\n//         return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n//         case ActionTypes.PROMOS_LOADING:\r\n//             return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n//         case ActionTypes.PROMOS_FAILED:\r\n//             return {...state, isLoading: false, errMess: action.payload};\r\n\r\n//         default:\r\n//           return state;\r\n//       }\r\n// };","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders =(state ={\r\n    errMess:null,\r\n    isLoading:true,\r\n    leaders:[]\r\n}, action) =>{\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading:false, errMess:null, leaders:action.payload }\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading:true, errMess:null, leaders:[] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading:false, errMess:action.payload, leaders:[] }\r\n        default:\r\n            return state;\r\n    }\r\n} ","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React ,{Component}   from 'react';\nimport \"./App.css\";\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';  \n\nconst store = ConfigureStore();\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n        <div>\n          <Main/>\n        </div> \n        </BrowserRouter>\n      </Provider>\n    );\n\n  }\n}\n  \nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\n import {Dishes} from './dishes';\r\n import {Comments} from './comments';\r\n import {Promotions} from './promotions';\r\n import {Leaders} from './leaders';\r\n import thunk from 'redux-thunk';\r\n import logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = ()=>{\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes:Dishes,\r\n            comments: Comments,\r\n            promotions : Promotions,\r\n            leaders : Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}